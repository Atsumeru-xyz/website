(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{290:function(e,t,a){"use strict";a.r(t);var o=a(13),s=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"glossary"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#glossary"}},[e._v("#")]),e._v(" Glossary")]),e._v(" "),t("p",[t("strong",[t("code",[e._v("Archive")])]),e._v(" - minimal integral unit of content. Represents data set of imported file (file path, "),t("RouterLink",{attrs:{to:"/guides/metadata.html"}},[e._v("Metadata")]),e._v(", unique hash, etc.) that server operates with")],1),e._v(" "),t("p",[t("strong",[t("code",[e._v("Serie")]),e._v(" or "),t("code",[e._v("content")])]),e._v(" - composite structure from any number of "),t("code",[e._v("Archives")]),e._v(". Represents general data from all "),t("code",[e._v("Archives")]),e._v(" in the given "),t("code",[e._v("Serie")]),e._v(". It is used to compile lists of imported content and contains metadata of this series (titles in different languages, statuses, authors, descriptions, etc.). "),t("code",[e._v("Serie")]),e._v(" is always created automatically at the time of import based on its settings or certain "),t("em",[e._v("standard")]),e._v(" forming rules. A "),t("code",[e._v("Serie")]),e._v(" can only be edited or deleted")]),e._v(" "),t("p",[t("strong",[t("code",[e._v("Chapter")])]),e._v(" - atomic unit of "),t("code",[e._v("Archive")]),e._v(". List of chapters is generated automatically during import based on folders in root of "),t("code",[e._v("Archive")]),e._v(". One folder - one "),t("code",[e._v("Chapter")])]),e._v(" "),t("div",{staticClass:"custom-block c-danger"},[t("h4",{staticClass:"c-title"}),t("p",[e._v("From images in the root of archive also creates a "),t("code",[e._v("Chapter")]),e._v(" with name of "),t("code",[e._v("Archive")]),e._v(" itself. Try to avoid placing images in root if you don't like this behavior")])]),t("p",[t("strong",[t("code",[e._v("Archive hash")])]),e._v(" - unique "),t("em",[e._v("identifier")]),e._v(" used by server and clients to identify imported "),t("code",[e._v("Archive")]),e._v(". By default it is created from path to "),t("code",[e._v("Archive")]),e._v(", but can be static, written in "),t("code",[e._v("book_info.json")]),e._v(" "),t("RouterLink",{attrs:{to:"/guides/metadata.html"}},[e._v("Metadata")]),e._v(", which allows to assign the same identifier even after moving "),t("code",[e._v("Archive")]),e._v(" around the file system and not to lose "),t("RouterLink",{attrs:{to:"/guides/users.html"}},[e._v("Users")]),e._v(" reading history. This hash always has "),t("code",[e._v("atsumeru")]),e._v(" prefix")],1),e._v(" "),t("p",[t("strong",[t("code",[e._v("Serie hash")])]),e._v(" - is the same as "),t("code",[e._v("Archive hash")]),e._v(", but for "),t("code",[e._v("Serie")]),e._v(". It is created from path to directory with "),t("code",[e._v("Archives")]),e._v(". Can also be static from "),t("RouterLink",{attrs:{to:"/guides/metadata.html"}},[e._v("Metadata")]),e._v(". This hash always has "),t("code",[e._v("atsumeru-serie")]),e._v(" prefix")],1)])}),[],!1,null,null,null);t.default=s.exports}}]);